openapi: 3.1.0
info:
  title: haircutapi
  version: '1.0'
  summary: Haircut store api
  description: ''
  contact:
    name: Thinh Nguyen
    url: t9ngdu00@students.oamk.fi
    email: t9ngdu00@students.oamk.fi
servers:
  - url: 'http://localhost:4000'
paths:
  /items:
    get:
      summary: Get stores information
      tags: []
      responses:
        '200':
          description: Get all the haircut store
          content:
            application/json:
              schema:
                type: object
                properties:
                  itemData:
                    type: array
                    items:
                      $ref: '#/components/schemas/ItemData'
              examples:
                example-1:
                  value:
                    itemData:
                      - items_id: '1'
                        name: Bazooni Barbershop
                        address: 'Asemakatu 15, 90100 Oulu'
                        rate: []
                        price: 5
                        opentime: '10:00'
                        contact_number: +84 384 568 983
                        description: string
                        discount_rate: 0
                        instagram: string
                        created_at: '2019-08-24T14:15:22Z'
                        update_at: '2019-08-24T14:15:22Z'
                        location:
                          longitude: 105.83552
                          latitude: 21.01066
        '404':
          description: Haircut store Not Found
      operationId: Get all stores
      description: Get all the baber store information.
    post:
      summary: Post a item
      operationId: Create a new store
      responses:
        '200':
          description: Store created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemData'
              examples:
                example-1:
                  value:
                    items_id: '1'
                    name: Bazooni Barbershop
                    address: 'Asemakatu 15, 90100 Oulu'
                    rate: []
                    price: 5
                    opentime: '10:00'
                    contact_number: +84 384 568 983
                    description: string
                    discount_rate: 0
                    instagram: string
                    created_at: '2019-08-24T14:15:22Z'
                    update_at: '2019-08-24T14:15:22Z'
                    location:
                      longitude: 105.83552
                      latitude: 21.01066
        '404':
          description: Can not create store
      description: |
        Create item with store information
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemData'
        description: ''
  '/items/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get a store
      tags: []
      responses:
        '200':
          description: Get the haircut store by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemData'
              examples:
                example-1:
                  value:
                    items_id: '1'
                    name: Bazooni Barbershop
                    address: 'Asemakatu 15, 90100 Oulu'
                    rate: []
                    price: 5
                    opentime: '10:00'
                    contact_number: +84 384 568 983
                    description: string
                    discount_rate: 0
                    instagram: string
                    created_at: '2019-08-24T14:15:22Z'
                    update_at: '2019-08-24T14:15:22Z'
                    location:
                      longitude: 105.83552
                      latitude: 21.01066
        '404':
          description: Information with given id was mot found.
      operationId: Get store by id
      description: Get a single hari cut shop information
    put:
      summary: Edit a store
      operationId: Update the store
      responses:
        '200':
          description: Item updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemData'
              examples:
                example-1:
                  value:
                    items_id: '1'
                    name: Bazooni Barbershop
                    address: 'Asemakatu 15, 90100 Oulu'
                    rate: []
                    price: 5
                    opentime: '10:00'
                    contact_number: +84 384 568 983
                    description: string
                    discount_rate: 0
                    instagram: string
                    created_at: '2019-08-24T14:15:22Z'
                    update_at: '2019-08-24T14:15:22Z'
                    location:
                      longitude: 105.83552
                      latitude: 21.01066
        '400':
          description: 'Error '
      description: |
        Edit item with store information
    delete:
      summary: Delete a store
      operationId: delete-items-id
      responses:
        '200':
          description: Deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemData'
              examples:
                example-1:
                  value:
                    items_id: '1'
                    name: Bazooni Barbershop
                    address: 'Asemakatu 15, 90100 Oulu'
                    rate: []
                    price: 5
                    opentime: '10:00'
                    contact_number: +84 384 568 983
                    description: string
                    discount_rate: 0
                    instagram: string
                    created_at: '2019-08-24T14:15:22Z'
                    update_at: '2019-08-24T14:15:22Z'
                    location:
                      longitude: 105.83552
                      latitude: 21.01066
      description: |
        Delte a store
  '/rates/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get rate
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  '':
                    $ref: '#/components/schemas/Rate'
              examples:
                example-1:
                  value:
                    '':
                      rate_id: '1'
                      rate: 1
                      comment: Good service.
                      userId: 61a37987a68810aa847abe22
                      userName: thinhgnuyensr
                      date: 29/10/2021
                      created_at: '2019-08-24T14:15:22Z'
                      update_at: '2019-08-24T14:15:22Z'
      operationId: Get rate by id
      description: Get rate by id
    put:
      summary: Update rate
      operationId: put-rate-id
      responses:
        '200':
          description: Updated
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rate'
              examples:
                example-1:
                  value:
                    rate_id: '1'
                    rate: 1
                    comment: Good service.
                    userId: 61a37987a68810aa847abe22
                    userName: thinhgnuyensr
                    date: 29/10/2021
                    created_at: '2019-08-24T14:15:22Z'
                    update_at: '2019-08-24T14:15:22Z'
      description: Update rate
    delete:
      summary: Delete rate
      operationId: delete-rate-id
      responses:
        '200':
          description: Delete rate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rate'
              examples:
                example-1:
                  value:
                    rate_id: '1'
                    rate: 1
                    comment: Good service.
                    userId: 61a37987a68810aa847abe22
                    userName: thinhgnuyensr
                    date: 29/10/2021
                    created_at: '2019-08-24T14:15:22Z'
                    update_at: '2019-08-24T14:15:22Z'
      description: Delete rate
  /auth/login:
    post:
      summary: Login
      operationId: Sign up to account
      responses:
        '200':
          description: User created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auth'
              examples:
                example-1:
                  value:
                    id: 1
                    username: thinhnguyensr
                    name: thinhgnuyensr
                    created_at: '2019-08-24T14:15:22Z'
                    passwordHash: '12345678'
                    role: admin
        '400':
          description: |
            Username not valid

            Invalid password
      description: |
        Login to give feedbacks (rates, comments)
      parameters: []
    parameters: []
  /auth/register:
    post:
      summary: Register
      operationId: Create a new account
      responses:
        '200':
          description: User created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auth'
              examples:
                example-1:
                  value:
                    id: 1
                    username: thinhnguyensr
                    name: thinhgnuyensr
                    created_at: '2019-08-24T14:15:22Z'
                    passwordHash: '12345678'
                    role: admin
        '400':
          description: Username already exists
      description: |
        (OPTIONAL if Google-auth is implemented)
        Create user account
      parameters: []
    parameters: []
  /rates:
    post:
      summary: Rate store
      operationId: Rate the store
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rate'
              examples:
                example-1:
                  value:
                    rate_id: '1'
                    rate: 1
                    comment: Good service.
                    userId: 61a37987a68810aa847abe22
                    userName: thinhgnuyensr
                    date: 29/10/2021
                    created_at: '2019-08-24T14:15:22Z'
                    update_at: '2019-08-24T14:15:22Z'
      description: Create a comment for the store
    parameters: []
  /users:
    get:
      summary: Get all user
      tags: []
      responses:
        '200':
          description: ALl users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auth'
              examples:
                example-1:
                  value:
                    id: 1
                    username: thinhnguyensr
                    name: thinhgnuyensr
                    created_at: '2019-08-24T14:15:22Z'
                    passwordHash: '12345678'
                    role: admin
        '400':
          description: Can not find users
      operationId: Get all user
      description: Get all users
    parameters: []
  '/user/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get user by id
      tags: []
      responses:
        '200':
          description: Get user by id
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auth'
        '400':
          description: Can not find the user
      operationId: Get user by id
      description: Get user by id
    put:
      summary: Update user
      operationId: put-users-id
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auth'
              examples:
                example-1:
                  value:
                    id: 1
                    username: thinhnguyensr
                    name: thinhgnuyensr
                    created_at: '2019-08-24T14:15:22Z'
                    passwordHash: '12345678'
                    role: admin
      description: Update user
    delete:
      summary: Delete user
      operationId: delete-users-id
      responses:
        '200':
          description: Deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auth'
              examples:
                example-1:
                  value:
                    id: 1
                    username: thinhnguyensr
                    name: thinhgnuyensr
                    created_at: '2019-08-24T14:15:22Z'
                    passwordHash: '12345678'
                    role: admin
      description: Delete user
  '/rates/{storeId}':
    parameters:
      - schema:
          type: string
        name: storeId
        in: path
        required: true
    get:
      summary: Get all rate of the store by id
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/All-Rate-of-store'
              examples:
                example-1:
                  value:
                    rate: 5
                    comment: Good services
                    userId: 61a3e5cb874540ff229fdf77
                    userName: thinhnguyenjr
                    storeId: 61a3e928874540ff229fdf8f
                    date: string
                    createAt: string
                    updateAt: string
      operationId: get-rate-storeId
      description: Get all rate of the store by id
components:
  schemas:
    ItemData:
      title: Items
      type: object
      description: ''
      properties:
        items_id:
          type: integer
          example: '1'
        name:
          type: string
          example: Zuy Minh
        address:
          type: string
          example: 'Ngõ 46c Phạm Ngọc Thạch, 106 C3 tập thể, Trung Tự, Đống Đa, Hà Nội, Việt Nam'
        rate:
          type: array
          uniqueItems: false
          items: {}
        price:
          type: number
          example: 5euro
        opentime:
          type: string
          example: 9 AM
          format: date-time
        contact_number:
          type: string
          example: +84 384 568 983
        description:
          type: string
        discount_rate:
          type: number
        instagram:
          type: string
        created_at:
          type: string
          format: date-time
        update_at:
          type: string
          format: date-time
        location:
          type: object
          required:
            - longitude
            - latitude
          properties:
            longitude:
              type: number
              example: 105.83552
            latitude:
              type: number
              example: 21.01066
      required:
        - items_id
        - name
        - address
        - rate
        - price
        - opentime
        - contact_number
        - description
        - discount_rate
        - instagram
        - created_at
        - update_at
        - location
      examples:
        - items_id: '1'
          name: Bazooni Barbershop
          address: 'Asemakatu 15, 90100 Oulu'
          rate: []
          price: 5
          opentime: '10:00'
          contact_number: +84 384 568 983
          description: string
          discount_rate: 0
          instagram: string
          created_at: '2019-08-24T14:15:22Z'
          update_at: '2019-08-24T14:15:22Z'
          location:
            longitude: 105.83552
            latitude: 21.01066
    Rate:
      title: Rate
      type: object
      examples:
        - rate_id: '1'
          rate: 1
          comment: Good service.
          userId: 61a37987a68810aa847abe22
          userName: thinhgnuyensr
          date: 29/10/2021
          created_at: '2019-08-24T14:15:22Z'
          update_at: '2019-08-24T14:15:22Z'
      properties:
        rate_id:
          type: integer
          example: '1'
        rate:
          type: number
          example: '4,6/5'
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
        comment:
          type: string
          example: Good service.
        userId:
          type: string
        userName:
          type: string
        date:
          type: string
          format: date-time
          example: 29/10/2021
        created_at:
          type: string
          format: date-time
        update_at:
          type: string
          format: date-time
      required:
        - rate_id
        - rate
        - comment
        - userId
        - userName
        - date
        - created_at
        - update_at
    Auth:
      title: Auth
      type: object
      examples:
        - id: 1
          username: thinhnguyensr
          name: thinhgnuyensr
          created_at: '2019-08-24T14:15:22Z'
          passwordHash: '12345678'
          role: admin
      properties:
        id:
          type: integer
          example: 1
        username:
          type: string
          example: thinhnguyen5
        name:
          type: string
          example: houselanhahomelatoam
        created_at:
          type: string
          format: date-time
        passwordHash:
          type: string
          example: '12345678'
        role:
          type: string
          enum:
            - '[''basic'''
            - '''supervisor'''
            - '''admin'']'
        accessToken:
          type: string
      required:
        - id
        - username
        - name
        - created_at
        - passwordHash
        - role
        - accessToken
    All-Rate-of-store:
      title: All-Rate-of-store
      type: object
      examples:
        - rate: 5
          comment: Good services
          userId: 61a3e5cb874540ff229fdf77
          userName: thinhnguyenjr
          storeId: 61a3e928874540ff229fdf8f
          date: string
          createAt: string
          updateAt: string
      properties:
        rate:
          type: number
        comment:
          type: string
        userId:
          type: string
        userName:
          type: string
        storeId:
          type: string
        date:
          type: string
          format: date-time
        createAt:
          type: string
          format: date-time
        updateAt:
          type: string
          format: date-time
      required:
        - rate
        - comment
        - userId
        - userName
        - storeId
        - date
        - createAt
        - updateAt
